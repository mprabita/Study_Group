<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-5TFUKJL1" failures="2" tests="5" name="Default test" time="29.802" errors="0" timestamp="16 May 2022 02:03:44 GMT">
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="6.49"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="4.886">
    <failure type="java.lang.AssertionError" message="expected [Help &amp;amp; Customer Service - Amazon Customer Service] but found [Contact Us – Amazon Customer Service]">
      <![CDATA[java.lang.AssertionError: expected [Help & Customer Service - Amazon Customer Service] but found [Contact Us – Amazon Customer Service]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.nexttechITC.Stepdefs.AmazonCustomerServiceStepDef.user_will_be_redirected_to_customer_service_page(AmazonCustomerServiceStepDef.java:41)
	at ✽.User will be redirected to Customer Service Page(file:///C:/Users/mona0/eclipse-workspace/Project01202022/Features/AmazonCustomerService.feature:7)
]]>
    </failure>
  </testcase> <!-- runScenario -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="6.068"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="5.171"/>
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="6.902">
    <failure type="io.cucumber.testng.UndefinedStepException" message="The step &amp;apos;user enter &amp;quot;Amy&amp;quot; and&amp;quot;Bari&amp;quot; and valid &amp;quot;esdy@gmail.com&amp;quot; and &amp;quot;class@2020&amp;quot;&amp;apos; is undefined.
You can implement this step using the snippet(s) below:

@When(&amp;quot;user enter {string} and\&amp;quot;Bari\&amp;quot; and valid {string} and {string}&amp;quot;)
public void user_enter_and_bari_and_valid_and(String string, String string2, String string3) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'user enter "Amy" and"Bari" and valid "esdy@gmail.com" and "class@2020"' is undefined.
You can implement this step using the snippet(s) below:

@When("user enter {string} and\"Bari\" and valid {string} and {string}")
public void user_enter_and_bari_and_valid_and(String string, String string2, String string3) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
	at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:110)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:110)
	at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
	at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- runScenario -->
</testsuite> <!-- Default test -->
